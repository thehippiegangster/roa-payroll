# Generated by Django 3.0.5 on 2020-06-30 20:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('custno', models.CharField(db_column='CustNo', max_length=7, primary_key=True, serialize=False, unique=True)),
                ('lastname', models.CharField(db_column='LastName', max_length=35)),
                ('firstname', models.CharField(db_column='FirstName', max_length=20)),
                ('customerinactive', models.SmallIntegerField(db_column='CustomerInactive')),
                ('dateadded', models.DateTimeField(blank=True, db_column='DateAdded', null=True)),
                ('datemodified', models.DateTimeField(blank=True, db_column='DateModified', null=True)),
                ('fullname', models.CharField(db_column='FullName', max_length=65, unique=True)),
            ],
            options={
                'db_table': 'Customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceSale',
            fields=[
                ('invoice', models.CharField(db_column='Invoice', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('regid', models.CharField(db_column='RegID', max_length=2)),
                ('dispatch', models.CharField(db_column='Dispatch', max_length=15)),
                ('locno', models.CharField(db_column='LocNo', max_length=5)),
                ('pricecode', models.CharField(db_column='PriceCode', max_length=1)),
                ('dept', models.CharField(db_column='Dept', max_length=2)),
                ('invdate', models.DateField(blank=True, db_column='InvDate', null=True)),
                ('entdate', models.DateField(blank=True, db_column='EntDate', null=True)),
                ('period', models.CharField(db_column='Period', max_length=6)),
                ('billloc', models.CharField(db_column='BillLoc', max_length=5)),
                ('invtype', models.CharField(db_column='InvType', max_length=21)),
                ('agrmtno', models.CharField(db_column='AgrmtNo', max_length=7)),
                ('wh', models.CharField(db_column='WH', max_length=4)),
                ('taxcode', models.CharField(db_column='TaxCode', max_length=8)),
                ('laborcost', models.FloatField(db_column='LaborCost')),
                ('printed', models.IntegerField(db_column='Printed')),
                ('amtcash', models.FloatField(db_column='AmtCash')),
                ('amtcharge', models.FloatField(db_column='AmtCharge')),
                ('amtcheck', models.FloatField(db_column='AmtCheck')),
                ('amtcreditc', models.FloatField(db_column='AmtCreditC')),
                ('amtchng', models.FloatField(db_column='AmtChng')),
                ('post', models.CharField(db_column='Post', max_length=1)),
                ('exempt', models.FloatField(db_column='Exempt')),
                ('formname', models.CharField(db_column='FormName', max_length=30)),
                ('txnid', models.TextField(db_column='TxnID')),
                ('invamount', models.FloatField(db_column='InvAmount')),
                ('quoteorg', models.CharField(db_column='QuoteOrg', max_length=10)),
                ('billcompl', models.SmallIntegerField(db_column='BillCompl')),
                ('billamount', models.FloatField(db_column='BillAmount')),
                ('matcost', models.FloatField(db_column='MatCost')),
                ('othercost', models.FloatField(db_column='OtherCost')),
                ('slterms', models.CharField(db_column='SlTerms', max_length=31)),
                ('duedate', models.DateTimeField(blank=True, db_column='DueDate', null=True)),
                ('dispnotes', models.SmallIntegerField(db_column='DispNotes')),
                ('dispparts', models.SmallIntegerField(db_column='DispParts')),
                ('transid', models.CharField(db_column='TransID', max_length=36, unique=True)),
                ('modified', models.DateTimeField(blank=True, db_column='Modified', null=True)),
                ('amtappliedcredits', models.FloatField(db_column='AmtAppliedCredits')),
                ('authorizeid', models.CharField(db_column='AuthorizeID', max_length=36)),
                ('acceptanceid', models.CharField(db_column='AcceptanceID', max_length=36)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'Sales',
                'ordering': ['-invdate'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recled',
            fields=[
                ('source', models.CharField(db_column='Source', max_length=1)),
                ('counter', models.CharField(db_column='Counter', max_length=5)),
                ('amount', models.FloatField(db_column='Amount')),
                ('ckno', models.CharField(db_column='CkNo', max_length=12)),
                ('ckdate', models.DateTimeField(blank=True, db_column='CkDate', null=True)),
                ('depno', models.CharField(db_column='DepNo', max_length=10)),
                ('period', models.CharField(db_column='Period', max_length=6)),
                ('debit', models.CharField(db_column='Debit', max_length=10)),
                ('credit', models.CharField(db_column='Credit', max_length=10)),
                ('type', models.CharField(db_column='Type', max_length=1)),
                ('notes', models.TextField(db_column='Notes')),
                ('crserial', models.CharField(db_column='CrSerial', max_length=5)),
                ('entrydate', models.DateTimeField(blank=True, db_column='EntryDate', null=True)),
                ('post', models.CharField(db_column='Post', max_length=1)),
                ('entryid', models.CharField(db_column='EntryID', max_length=36, primary_key=True, serialize=False, unique=True)),
                ('depositdate', models.DateTimeField(blank=True, db_column='DepositDate', null=True)),
                ('appliedfromid', models.CharField(db_column='AppliedFromID', max_length=36)),
                ('qbcredittxnid', models.CharField(db_column='QBCreditTxnID', max_length=36)),
                ('paymentid', models.CharField(db_column='PaymentID', max_length=36)),
            ],
            options={
                'verbose_name': 'Received Payment',
                'verbose_name_plural': 'Received Payments',
                'db_table': 'RecLed',
                'ordering': ['-invoice__invdate'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Salesled',
            fields=[
                ('entryId', models.CharField(db_column='EntryID', max_length=36, primary_key=True, serialize=False)),
                ('count', models.CharField(db_column='Count', max_length=3)),
                ('prod', models.CharField(db_column='Prod', max_length=36)),
                ('firstline', models.IntegerField(db_column='FirstLine')),
                ('desc', models.TextField(db_column='Desc')),
                ('quan', models.FloatField(db_column='Quan')),
                ('price', models.FloatField(db_column='Price')),
                ('amount', models.FloatField(db_column='Amount')),
                ('wh', models.CharField(db_column='WH', max_length=4)),
                ('ptype', models.CharField(db_column='PType', max_length=1)),
                ('jbclass', models.CharField(db_column='JBClass', max_length=40)),
                ('serial', models.CharField(db_column='Serial', max_length=36)),
                ('sdebit', models.CharField(db_column='SDebit', max_length=10)),
                ('scredit', models.CharField(db_column='SCredit', max_length=10)),
                ('cost', models.FloatField(db_column='Cost')),
                ('cdebit', models.CharField(db_column='CDebit', max_length=10)),
                ('ccredit', models.CharField(db_column='CCredit', max_length=10)),
                ('tax1', models.FloatField(db_column='Tax1')),
                ('tax2', models.FloatField(db_column='Tax2')),
                ('tax3', models.FloatField(db_column='Tax3')),
                ('tax4', models.FloatField(db_column='Tax4')),
                ('epa', models.FloatField(db_column='EPA')),
                ('miscnum', models.FloatField(db_column='MiscNum')),
                ('warranty', models.DateTimeField(blank=True, db_column='Warranty', null=True)),
            ],
            options={
                'verbose_name': 'Line Item',
                'verbose_name_plural': 'Line Items',
                'db_table': 'SalesLed',
                'ordering': ['-invoice__invdate'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShowSplits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_with', models.CharField(db_column='Invoice_With', max_length=10)),
                ('invoice_from', models.CharField(db_column='Invoice_From', max_length=10, null=True)),
                ('collected_with', models.DecimalField(blank=True, db_column='Collected_With', decimal_places=2, max_digits=10, null=True)),
                ('collected_from', models.DecimalField(blank=True, db_column='Collected_From', decimal_places=2, max_digits=10, null=True)),
                ('matCost_with', models.FloatField(blank=True, db_column='MatCost_With', null=True)),
                ('matCost_from', models.FloatField(blank=True, db_column='MatCost_From', null=True)),
                ('employee_with', models.CharField(blank=True, db_column='Employee_With', max_length=41, null=True)),
                ('employee_from', models.CharField(blank=True, db_column='Employee_From', max_length=41, null=True)),
            ],
            options={
                'db_table': 'ShowSplits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Splits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(db_column='Invoice', max_length=10)),
                ('matCost', models.FloatField(blank=True, db_column='MatCost', null=True)),
                ('total_cost', models.FloatField(blank=True, db_column='Total_Cost', null=True)),
                ('invDate', models.DateField(blank=True, db_column='InvDate', null=True)),
                ('employee', models.CharField(blank=True, db_column='Employee', max_length=41, null=True)),
                ('payCash_amount', models.FloatField(blank=True, db_column='PayCash_Amount', null=True)),
                ('payCheck_amount', models.FloatField(blank=True, db_column='PayCheck_Amount', null=True)),
                ('payCC_amount', models.FloatField(blank=True, db_column='PayCC_Amount', null=True)),
                ('payCredit_amount', models.FloatField(blank=True, db_column='PayCredit_Amount', null=True)),
                ('payOther_amount', models.FloatField(blank=True, db_column='PayOther_Amount', null=True)),
                ('collected', models.DecimalField(blank=True, db_column='Collected', decimal_places=2, max_digits=10, null=True)),
                ('fullName', models.CharField(blank=True, db_column='Fullname', max_length=65, null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=10, null=True)),
                ('pma_checks', models.FloatField(blank=True, db_column='PMA_Checks', null=True)),
                ('split_with_amount', models.FloatField(blank=True, db_column='SPLIT_WITH_Amount', null=True)),
                ('split_from_amount', models.FloatField(blank=True, db_column='SPLIT_FROM_Amount', null=True)),
                ('pma_years', models.IntegerField(blank=True, db_column='PMA_Years', null=True)),
                ('pma_quan', models.FloatField(blank=True, db_column='PMA_Quan', null=True)),
                ('pma_amount', models.FloatField(db_column='PMA_Amount')),
                ('splitFrom', models.CharField(blank=True, db_column='SplitFrom', max_length=50, null=True)),
                ('splitWith', models.CharField(blank=True, db_column='SplitWith', max_length=50, null=True)),
                ('payMethod', models.CharField(blank=True, db_column='PayMethod', max_length=50, null=True)),
                ('pendUntil', models.DateField(blank=True, db_column='PendUntil', null=True)),
            ],
            options={
                'db_table': 'Splits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=65)),
                ('position', models.CharField(max_length=26)),
            ],
        ),
        migrations.CreateModel(
            name='Extra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(db_column='Invoice', max_length=16)),
                ('amount', models.FloatField(blank=True, db_column='Amount', null=True)),
                ('memo', models.CharField(db_column='Memo', max_length=255)),
            ],
            options={
                'db_table': 'Extras',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Financing',
            fields=[
                ('paymethod', models.CharField(db_column='PayMethod', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('account', models.CharField(db_column='Account', default='0000', max_length=10)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=1)),
                ('desc', models.CharField(blank=True, db_column='Desc', max_length=50)),
                ('cost', models.CharField(blank=True, db_column='Cost', max_length=36)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'db_table': 'Financing',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Helper',
            fields=[
                ('tech', models.CharField(db_column='Tech', max_length=50)),
                ('helper', models.CharField(db_column='Helper', max_length=50)),
                ('tech_minimum', models.FloatField(db_column='Tech_Minimum')),
                ('helper_minimum', models.FloatField(db_column='Helper_Minimum')),
                ('tech_emp_id', models.CharField(blank=True, max_length=5)),
                ('helper_emp_id', models.CharField(blank=True, max_length=5, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Helper',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Installation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(db_column='Invoice', max_length=16)),
                ('quan', models.FloatField(db_column='Quan')),
                ('install_desc', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Installation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InstallationRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('package_unit', models.DecimalField(decimal_places=2, max_digits=6)),
                ('split_system', models.DecimalField(decimal_places=2, max_digits=6)),
                ('rate_percent', models.FloatField(null=True)),
                ('team_num', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'InstallationRates',
                'ordering': ['team_num'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Installer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(db_column='Invoice', max_length=10)),
                ('matCost', models.FloatField(blank=True, db_column='MatCost', null=True)),
                ('total_cost', models.FloatField(blank=True, db_column='Total_Cost', null=True)),
                ('invDate', models.DateField(blank=True, db_column='InvDate', null=True)),
                ('employee', models.CharField(blank=True, db_column='Employee', max_length=41, null=True)),
                ('payCash_amount', models.FloatField(blank=True, db_column='PayCash_Amount', null=True)),
                ('payCheck_amount', models.FloatField(blank=True, db_column='PayCheck_Amount', null=True)),
                ('payCC_amount', models.FloatField(blank=True, db_column='PayCC_Amount', null=True)),
                ('payCredit_amount', models.FloatField(blank=True, db_column='PayCredit_Amount', null=True)),
                ('payOther_amount', models.FloatField(blank=True, db_column='PayOther_Amount', null=True)),
                ('collected', models.DecimalField(blank=True, db_column='Collected', decimal_places=2, max_digits=10, null=True)),
                ('fullName', models.CharField(blank=True, db_column='Fullname', max_length=65, null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=10, null=True)),
                ('pma_checks', models.FloatField(blank=True, db_column='PMA_Checks', null=True)),
                ('split_with_amount', models.FloatField(blank=True, db_column='SPLIT_WITH_Amount', null=True)),
                ('split_from_amount', models.FloatField(blank=True, db_column='SPLIT_FROM_Amount', null=True)),
                ('pma_years', models.IntegerField(blank=True, db_column='PMA_Years', null=True)),
                ('pma_quan', models.FloatField(blank=True, db_column='PMA_Quan', null=True)),
                ('pma_amount', models.FloatField(db_column='PMA_Amount')),
                ('splitFrom', models.CharField(blank=True, db_column='SplitFrom', max_length=50, null=True)),
                ('splitWith', models.CharField(blank=True, db_column='SplitWith', max_length=50, null=True)),
                ('payMethod', models.CharField(blank=True, db_column='PayMethod', max_length=50, null=True)),
                ('pendUntil', models.DateField(blank=True, db_column='PendUntil', null=True)),
                ('tech', models.CharField(blank=True, db_column='Tech', max_length=50, null=True)),
                ('helper', models.CharField(blank=True, db_column='Helper', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Installers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InstallersPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installerInvoice', models.CharField(db_column='InstallerInvoice', max_length=10)),
                ('tech', models.CharField(db_column='Tech', max_length=50)),
                ('payInstaller', models.DecimalField(blank=True, db_column='PayInstaller', decimal_places=2, max_digits=10, null=True)),
                ('helper', models.CharField(db_column='Helper', max_length=50)),
                ('payHelper', models.DecimalField(blank=True, db_column='PayHelper', decimal_places=2, max_digits=10, null=True)),
                ('item', models.CharField(db_column='Item', max_length=26, null=True)),
            ],
            options={
                'db_table': 'InstallersPayment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pmabonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('units', models.CharField(max_length=1)),
                ('years', models.CharField(max_length=2)),
                ('price', models.CharField(max_length=4)),
                ('bonus', models.IntegerField()),
            ],
            options={
                'verbose_name': 'PMA Bonus',
                'verbose_name_plural': 'PMA Bonuses',
                'db_table': 'PMABonus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('technician', models.CharField(db_column='Technician', max_length=50)),
                ('position', models.CharField(db_column='Position', max_length=20)),
                ('high_55', models.FloatField(db_column='HIGH_55', max_length=2)),
                ('high_75', models.FloatField(db_column='HIGH_75', max_length=2)),
                ('high_100', models.FloatField(db_column='HIGH_100', max_length=2)),
                ('low_100', models.FloatField(db_column='LOW_100', max_length=2)),
                ('per_unit', models.FloatField(db_column='PER_UNIT', max_length=2)),
                ('weekly_minimum', models.CharField(db_column='WEEKLY_MINIMUM', max_length=10)),
                ('effective_date', models.DateField(blank=True, db_column='EFFECTIVE_DATE', null=True)),
                ('end_date', models.DateField(db_column='END_DATE', null=True)),
                ('hourly', models.FloatField(blank=True, db_column='HOURLY', null=True)),
                ('salary', models.FloatField(db_column='SALARY', null=True)),
                ('employee_id', models.CharField(blank=True, max_length=5, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Technician',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ViewInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(db_column='Invoice', max_length=10)),
                ('matcost', models.FloatField(blank=True, db_column='MatCost', null=True)),
                ('total_cost', models.FloatField(blank=True, db_column='Total_Cost', null=True)),
                ('invdate', models.DateField(blank=True, db_column='InvDate', null=True)),
                ('employee', models.CharField(blank=True, db_column='Employee', max_length=41, null=True)),
                ('paycash_amount', models.FloatField(blank=True, db_column='PayCash_Amount', null=True)),
                ('paycheck_amount', models.FloatField(blank=True, db_column='PayCheck_Amount', null=True)),
                ('paycc_amount', models.FloatField(blank=True, db_column='PayCC_Amount', null=True)),
                ('paytrade_amount', models.FloatField(blank=True, db_column='PayTrade_Amount', null=True)),
                ('paycredit_amount', models.FloatField(blank=True, db_column='PayCredit_Amount', null=True)),
                ('payother_amount', models.FloatField(blank=True, db_column='PayOther_Amount', null=True)),
                ('collected', models.FloatField(blank=True, db_column='Collected', null=True)),
                ('fullname', models.CharField(blank=True, db_column='Fullname', max_length=65, null=True)),
                ('price', models.FloatField(blank=True, db_column='Price', null=True)),
                ('pma_checks', models.FloatField(blank=True, db_column='PMA_Checks', null=True)),
                ('split_with_amount', models.FloatField(blank=True, db_column='SPLIT_WITH_Amount', null=True)),
                ('split_from_amount', models.FloatField(blank=True, db_column='SPLIT_FROM_Amount', null=True)),
                ('pma_years', models.IntegerField(blank=True, db_column='PMA_Years', null=True)),
                ('pma_quan', models.FloatField(blank=True, db_column='PMA_Quan', null=True)),
                ('pma_amount', models.FloatField(db_column='PMA_Amount')),
                ('splitfrom', models.CharField(blank=True, db_column='SplitFrom', max_length=50, null=True)),
                ('splitwith', models.CharField(blank=True, db_column='SplitWith', max_length=50, null=True)),
                ('paymethod', models.CharField(blank=True, db_column='PayMethod', max_length=50, null=True)),
                ('penduntil', models.DateField(blank=True, db_column='PendUntil', null=True)),
            ],
            options={
                'db_table': 'ViewInvoices',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ViewInvoicesUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(db_column='Invoice', max_length=10)),
                ('matcost', models.FloatField(blank=True, db_column='MatCost', null=True)),
                ('total_cost', models.FloatField(blank=True, db_column='Total_Cost', null=True)),
                ('invdate', models.DateField(blank=True, db_column='InvDate', null=True)),
                ('employee', models.CharField(blank=True, db_column='Employee', max_length=41, null=True)),
                ('paycash_amount', models.FloatField(blank=True, db_column='PayCash_Amount', null=True)),
                ('paycheck_amount', models.FloatField(blank=True, db_column='PayCheck_Amount', null=True)),
                ('paycc_amount', models.FloatField(blank=True, db_column='PayCC_Amount', null=True)),
                ('paytrade_amount', models.FloatField(blank=True, db_column='PayTrade_Amount', null=True)),
                ('paycredit_amount', models.FloatField(blank=True, db_column='PayCredit_Amount', null=True)),
                ('payother_amount', models.FloatField(blank=True, db_column='PayOther_Amount', null=True)),
                ('collected', models.DecimalField(blank=True, db_column='Collected', decimal_places=0, max_digits=10, null=True)),
                ('fullname', models.CharField(blank=True, db_column='Fullname', max_length=65, null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=0, max_digits=10, null=True)),
                ('pma_checks', models.FloatField(blank=True, db_column='PMA_Checks', null=True)),
                ('split_with_amount', models.FloatField(blank=True, db_column='SPLIT_WITH_Amount', null=True)),
                ('split_from_amount', models.FloatField(blank=True, db_column='SPLIT_FROM_Amount', null=True)),
                ('pma_years', models.IntegerField(blank=True, db_column='PMA_Years', null=True)),
                ('pma_quan', models.FloatField(blank=True, db_column='PMA_Quan', null=True)),
                ('pma_amount', models.FloatField(db_column='PMA_Amount')),
                ('splitfrom', models.CharField(blank=True, db_column='SplitFrom', max_length=50, null=True)),
                ('splitwith', models.CharField(blank=True, db_column='SplitWith', max_length=50, null=True)),
                ('paymethod', models.CharField(blank=True, db_column='PayMethod', max_length=50, null=True)),
                ('penduntil', models.DateField(blank=True, db_column='PendUntil', null=True)),
            ],
            options={
                'db_table': 'ViewInvoicesUnits',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WarrantyLabor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.CharField(db_column='Invoice', max_length=16)),
                ('quan', models.FloatField(db_column='Quan')),
            ],
            options={
                'db_table': 'WarrantyLabor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmployeeInvoices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='payrollsite.Customer')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='empinvoice', to='payrollsite.InvoiceSale')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='payrollsite.Salesled')),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='payrollsite.Technician')),
            ],
        ),
    ]
